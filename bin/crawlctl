#!/usr/bin/env python

import sys
import argparse
import logging

def main():

    parser = argparse.ArgumentParser()
    parser.add_argument('--verbose', '-v', action='count', default=0)

    subparsers = parser.add_subparsers()

    parser_as = subparsers.add_parser('seed-add')
    parser_as_file = parser_as.add_argument_group('from file group')
    parser_as_file.add_argument('--from-file', metavar='<file>')
    parser_as_file.add_argument('--url-field', metavar='<field name>')
    parser_as_file.add_argument('--id-field', metavar='<field name>')
    parser_as.add_argument('--tag', metavar='<tag>')
    parser_as.add_argument('--dry-run', action='store_true')

    parser_qs = subparsers.add_parser('seed-query')
    parser_qs.add_argument('--tag', metavar='<tag>')

    parser_rs = subparsers.add_parser('seed-remove')
    parser_rs_file = parser_rs.add_argument_group('from file group')
    parser_rs_file.add_argument('--from-file', metavar='<file>')
    parser_rs_file.add_argument('--url-field', metavar='<field name>')
    parser_rs_file.add_argument('--id-field', metavar='<field name>')
    parser_rs.add_argument('--tag', metavar='<tag>')
    parser_rs.add_argument('--dry-run', action='store_true')

    #parser_at = subparsers.add_parser('tag-add')

    parser_qt = subparsers.add_parser('tag-query')
    parser_qt.add_argument('--tag', metavar='<tag>')

    parser_rt = subparsers.add_parser('tag-remove')
    parser_rt.add_argument('--tag', metavar='<tag>', required=True)
    parser_rt.add_argument('--dry-run', action='store_true')

    parser_ac = subparsers.add_parser('crawl-add')
    parser_ac.add_argument('--name', metavar='<name>', required=True)
    parser_ac.add_argument('--target', metavar='<aws s3 uri>')
    parser_ac.add_argument('--select', metavar=('<tag>', '<depth>'), nargs=2)
    parser_ac.add_argument('--dry-run', action='store_true')

    parser_qc = subparsers.add_parser('crawl-query')
    parser_qc.add_argument('--name', metavar='<name>')

    parser_rc = subparsers.add_parser('crawl-remove')
    parser_rc.add_argument('--name', metavar='<name>', required=True)
    parser_rc.add_argument('--cancel')
    parser_rc.add_argument('--dry-run', action='store_true')

    args = parser.parse_args()

    logging_level = logging.WARNING - (10 * min(args.verbose, 3))
    logging.basicConfig(format='crawlctl: %(levelname)s: %(message)s',
                        level=logging_level)


if __name__ == '__main__':
    sys.exit(main())
